NewTargetSource()
AddSourceFolder(RECURSE PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/public")
AddSourceFolder(RECURSE "${CMAKE_CURRENT_SOURCE_DIR}/private")
source_group(TREE ${PROJECT_SOURCE_DIR} FILES ${SourceFiles})

function(add_lib TARGET_NAME)
    set_target_properties(${TARGET_NAME} PROPERTIES FOLDER "utilpp")
    target_compile_features(${TARGET_NAME} PRIVATE cxx_std_20)
    set_target_properties(${TARGET_NAME} PROPERTIES CXX_STANDARD_REQUIRED ON)

    find_package(cpuid)
    if(cpuid_FOUND)
        target_compile_definitions(${TARGET_NAME} PRIVATE -DHAS_CPUID)
        target_link_libraries(${TARGET_NAME} PRIVATE cpuid::cpuid)
    endif()

    target_link_libraries(${TARGET_NAME} PRIVATE RapidJSON)
    AddTargetInclude(${TARGET_NAME})
    AddTargetInstall(${TARGET_NAME} UTILPP)
endfunction()

set(TARGET_NAME system_info_util)
add_library(${TARGET_NAME} SHARED ${SourceFiles})
target_compile_definitions(${TARGET_NAME} PRIVATE -DSYSTEM_INFO_API_EXPORTS)
target_link_libraries(${TARGET_NAME} PRIVATE simdjson::simdjson)
target_link_libraries(${TARGET_NAME} PRIVATE UTILPP::simple_utilpp)
target_link_libraries(${TARGET_NAME} PRIVATE UTILPP::simple_logger)
add_lib(${TARGET_NAME})

set(TARGET_NAME system_info_util_a)
add_library(${TARGET_NAME} STATIC ${SourceFiles})
target_compile_definitions(${TARGET_NAME} PUBLIC -DSYSTEM_INFO_API_NODLL)
target_link_libraries(${TARGET_NAME} PRIVATE simdjson::simdjson_static)
target_link_libraries(${TARGET_NAME} PRIVATE UTILPP::simple_utilpp_a)
target_link_libraries(${TARGET_NAME} PRIVATE UTILPP::simple_logger_a)
add_lib(${TARGET_NAME})