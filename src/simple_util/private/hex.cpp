#include "hex.h"

const char s_vecUpper[] = "0123456789ABCDEF";
const char s_vecLower[] = "0123456789abcdef";
const uint8_t s_array[256] = {
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
     0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 255, 255, 255, 255, 255, 255,
    255, 10, 11, 12, 13, 14, 15, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 10, 11, 12, 13, 14, 15, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
};

bool to_hex(char* const des, const uint8_t* src, size_t insize, const char* vec) {
    for (int i = 0; i < insize; i++) {
        des[2 * i + 1] = vec[src[i] & 0x0F];
        des[2 * i ] = vec[src[i] >> 4];
    }
    des[insize * 2] = 0;
    return true;
}

bool to_upper_hex(char* const des, const uint8_t* src, size_t insize) {
    return to_hex(des, src, insize, s_vecUpper);
}
bool to_lower_hex(char* const des, const uint8_t* src, size_t insize) {
    return to_hex(des, src, insize, s_vecLower);
}

bool hex_to_bin(uint8_t* const des, const char* src, size_t insize)
{
    if (insize % 2 != 0) {
        return false;
    }
    for (int i = 0; i < insize; i+=2) {
        if (s_array[src[i]] == 255 || s_array[src[i + 1]] == 255) {
            return false;
        }
        des[i/2] = s_array[src[i]]<<4 | s_array[src[i+1]];
    }
    return true;
}

